#!/usr/bin/env python3
"""
Script para an√°lise completa de qualidade de c√≥digo.
Executa m√∫ltiplas ferramentas de an√°lise e formata√ß√£o.
"""

import subprocess
import sys
from pathlib import Path

def run_command(cmd, description):
    """Executa um comando e exibe o resultado."""
    print(f"\n{'='*60}")
    print(f"üîç {description}")
    print(f"{'='*60}")
    
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        if result.stdout:
            print(result.stdout)
        if result.stderr:
            print(f"‚ùå Erros:\n{result.stderr}")
        return result.returncode == 0
    except Exception as e:
        print(f"‚ùå Erro ao executar: {e}")
        return False

def main():
    """Executa an√°lise completa do c√≥digo."""
    src_path = "src"
    
    if not Path(src_path).exists():
        print(f"‚ùå Diret√≥rio {src_path} n√£o encontrado!")
        sys.exit(1)
    
    print("üöÄ Iniciando an√°lise completa de qualidade de c√≥digo...")
    
    # 1. Formata√ß√£o autom√°tica
    run_command("python -m black src/", "Formata√ß√£o com Black")
    run_command("python -m isort src/ --profile black", "Organiza√ß√£o de imports com isort")
    
    # 2. An√°lise de qualidade
    run_command("python -m pylint src --disable=C0114,C0115,C0116 --reports=n --score=y", 
                "An√°lise com Pylint")
    run_command("python -m flake8 src/", "An√°lise com Flake8")
    run_command("python -m vulture src/", "Detec√ß√£o de c√≥digo morto com Vulture")
    
    # 3. An√°lise de seguran√ßa
    run_command("python -m bandit -r src/", "An√°lise de seguran√ßa com Bandit")
    
    # 4. An√°lise de complexidade
    run_command("python -m radon cc src/ -a", "Complexidade ciclom√°tica com Radon")
    run_command("python -m radon mi src/", "√çndice de manutenibilidade com Radon")
    
    # 5. Verifica√ß√£o de tipos
    run_command("python -m mypy src/ --ignore-missing-imports", "Verifica√ß√£o de tipos com MyPy")
    
    # 6. Imports n√£o utilizados
    run_command("python -m unimport --check src/", "Verifica√ß√£o de imports com Unimport")
    
    print(f"\n{'='*60}")
    print("‚úÖ An√°lise completa finalizada!")
    print("üìä Revise os resultados acima para identificar melhorias.")
    print(f"{'='*60}")

if __name__ == "__main__":
    main()
